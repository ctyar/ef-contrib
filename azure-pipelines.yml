# https://docs.microsoft.com/azure/devops/pipelines/yaml-schema

stages:
- stage: BuildStage
  displayName: 'Build'
  jobs:
  - job: BuildJob
    displayName: 'Build'
    strategy:
      matrix:
        linux:
          imageName: 'ubuntu-latest'
        mac:
          imageName: 'windows-latest'
        windows:
          imageName: 'macOS-latest'
    pool:
      vmImage: $(imageName)
    workspace:
      clean: all

    steps:
    - task: UseDotNet@2
      displayName: 'Install .NET Core 3'
      inputs:
        version: '3.1.x'

    - task: DotNetCoreCLI@2
      displayName: 'Restore tools'
      inputs:
        command: custom
        custom: tool
        arguments: 'restore'

    - task: DotNetCoreCLI@2
      displayName: 'Run Cake'
      inputs:
        command: custom
        custom: cake
        arguments: 'build.cake'

    - publish: '$(Build.Repository.LocalPath)/artifacts'
      displayName: 'Publish artifacts'
      condition: eq(variables['imageName'], 'ubuntu-latest')
      artifact: 'packages'

- stage: PublishAlphaPackageStage
  displayName: 'Publish alpha package'
  dependsOn: BuildStage
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
  - deployment:
    pool:
      vmImage: 'windows-latest'
    environment: 'Github package repository'
    strategy:
      runOnce:
        deploy:
          steps:

          - download: current
            displayName: 'Download artifacts'
            artifact: 'packages'

          # https://github.com/Microsoft/azure-pipelines-tasks/issues/7160
          - task: NuGetCommand@2
            displayName: 'Push the packages to Nuget.org'
            inputs:
              command: 'push'
              packagesToPush: '$(Pipeline.Workspace)/packages/*.nupkg'
              nuGetFeedType: 'external'
              publishFeedCredentials: 'EfContribGithubPackageRepository'

#https://github.com/microsoft/azure-pipelines-yaml/issues/344
- stage: PublishFinalPackageStage
  displayName: 'Publish final package'
  dependsOn: PublishAlphaPackageStage
  condition: succeeded()
  jobs:
  - deployment:
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'Nuget org'
    strategy:
      runOnce:
        deploy:
          steps:

          - download: current
            displayName: 'Download artifacts'
            artifact: 'packages'

          - task: NuGetCommand@2
            displayName: 'Push the packages to Nuget.org'
            inputs:
              command: 'push'
              packagesToPush: '$(Pipeline.Workspace)/packages/*.nupkg'
              nuGetFeedType: 'external'
              publishFeedCredentials: 'EfContribNugetConnection'